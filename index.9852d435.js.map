{"mappings":"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","sources":["src/js/api/themoviedbAPI/test.js","src/js/upcoming.js","src/js/pages/home/hero.js","src/js/weekly-trends.js"],"sourcesContent":["import ApiMovie from './fetch-movie';\nconst apiMovie = new ApiMovie();\n\n// --------------------------ТЕСТ - Трендові фільми дня та тижня\n// async function getTrendMovieOfDay() {\n//   try {\n//     const response = await apiMovie.getTrend('day');\n//     console.log('Трендові фільми дня:', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrendMovieOfDay();\n\n// async function getTrendMovieOfWeek() {\n//   try {\n//     const response = await apiMovie.getTrend('week');\n//     console.log('Трендові фільми тижня :', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrendMovieOfWeek();\n\n// --------------------------ТЕСТ - Нові фільми\n\n//  async function getNewFilms() {\n//    try {\n//      const response = await apiMovie.getNewFilms();\n//      console.log('Нові фільми', response.data.results);\n//    } catch (error) {\n//      console.log('Error:', error);\n//    }\n//  }\n//  getNewFilms();\n\n// --------------------------ТЕСТ - Фільми за ключовим словом + за роком\n\n// apiMovie\n//   .searchByQueryYear('John Wick', 2023)\n//   .then(movies => {\n//     console.log(`Пошук результата:`, movies);\n//   })\n//   .catch(error => {\n//     console.log('Error:', error);\n//   });\n// async function getNewFilms() {\n//   try {\n//     const response = await apiMovie.getNewFilms(2);\n//     console.log('Нові фільми', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getNewFilms();\n\n// --------------------------ТЕСТ - Фільми за ключовим словом + за роком\n\n// async function searchByQueryYear() {\n//   try {\n//     if (true) {\n//       apiMovie.query = 'John Wick';\n//       const response = await apiMovie.searchByQueryYear(1);\n//       console.log('Пошук фільмів по назві:', response.data.results);\n//     } else {\n//       apiMovie.query = 'John Wick';\n//       const response = await apiMovie.searchByQueryYear(1);\n//       const filteredResults = response.data.results.filter(movie =>\n//         movie.release_date.includes(2023)\n//       );\n//       console.log('Пошук фільмів по назві + фільтр по року:', filteredResults);\n//     }\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// searchByQueryYear();\n\n// try to refactor\n\n// async function searchByQueryYear(year) {\n//   try {\n//     const response = await apiMovie.searchByQueryYear('John Wick');\n//     console.log(`Пошук результата:`, response);\n//     const filteredResults = response.data.results.filter(\n//       movie => movie.release_date && movie.release_date.includes(year)\n//     );\n//     return filteredResults;\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// console.log(searchByQueryYear(2023));\n\n//--------------------------ТЕСТ- Детальна інформація про фільм\n\n// const movieId = 245891;\n\n// async function getMovieInfo() {\n//   try {\n//     const response = await apiMovie.getMovieInfo(movieId);\n//     console.log('Детальна інформація про фільм:', response.data);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// getMovieInfo();\n\n//--------------------------ТЕСТ - Повна інформація про можливий трейлер фільма на ютубі\n\n// const movieId = 245891;\n// async function getTrailer() {\n//   try {\n//     const response = await apiMovie.getTrailer(movieId);\n//     console.log('Movie Trailer:', response.data.results[0]);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrailer();\n\n//--------------------------ТЕСТ - Перелік жанрів\n\n// async function getGenres() {\n//   try {\n//     const response = await apiMovie.getGenresList();\n//     console.log('Перелік жанрів:', response.data.genres);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// getGenres();\n","import ApiMovie from './api/themoviedbAPI/fetch-movie';\n\nimport { ServiceAddRemoveBtn } from './api/ServiceAddRemoveBtn/ServiceAddRemoveBtnAPI';\n\nconst apiMovie = new ApiMovie();\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst movieDescription = document.querySelector('.movieDescription');\n\ngetNewFilms();\n\nasync function getNewFilms() {\n  try {\n    const response = await apiMovie.getNewFilms();\n    const randomFilm = randomElement(response.data.results);\n\n    const movie = await apiMovie.getMovieInfo(randomFilm.id);\n\n    movieDescription.innerHTML = createUpcomingMovieMarkup(movie.data);\n\n    const addRemoveBtn = document.querySelector('.add-remove-btn');\n\n    const serviceAddRemoveBtn = new ServiceAddRemoveBtn(addRemoveBtn, movie);\n\n    serviceAddRemoveBtn.setButtonName();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction randomElement(arr) {\n  const rand = Math.floor(Math.random() * arr.length);\n  return arr[rand];\n}\n\nfunction createUpcomingMovieMarkup({\n  id,\n  backdrop_path,\n  original_title,\n  release_date,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const allGenres = genres.map(({ name }) => name).join(', ');\n  return `\n    <div class=\"image-upcoming\">\n    <img\n      class=\"gallery-item__img\"\n      src=\"${IMAGE_URL}${backdrop_path}\"\n      alt=\"movie\"\n      loading=\"lazy\"\n    />\n  </div>\n  <div class=\"gallery-item\" id=\"${id}\">\n    <h3 class=\"info-item-title\">${original_title}</h3>\n    <div class=\"info\">\n      <div class=\"info-item-one-part\">\n        <p class=\"info-item\">\n          <b>Release date</b\n          ><span class=\"info-item-second\">${release_date}</span>\n        </p>\n        <p class=\"info-item\">\n          <b>Vote / Votes</b\n          ><span class=\"info-item-fourth vote-text\">${vote_average}</span> /\n          <span class=\"info-item-fourth vote-text\">${vote_count}</span>\n        </p>\n      </div>\n      <div class=\"info-item-two-part\">\n        <p class=\"info-item\"><b>Popularity</b>${popularity}</p>\n        <p class=\"info-item\"><b>Genre </b>${allGenres}</p>\n      </div>\n    </div>\n    <div class=\"info-item-about\">\n      <p class=\"info-item-about-movie\">\n        <b><span class=\"info-item-thirty\">About</span></b\n        >${overview}\n      </p>\n    </div>\n    <button type=\"button\" class=\"add-remove-btn button-accent\" id=\"fix\"></button>\n  </div>`;\n}\n","import '~node_modules/swiper/swiper-element-bundle.min.js';\nimport ApiMovie from '../../api/themoviedbAPI/fetch-movie';\nimport { getStar } from '../../components/getStar';\nimport * as basicLightbox from 'basiclightbox';\nimport { ServiceAddRemoveBtn } from '../../api/ServiceAddRemoveBtn/ServiceAddRemoveBtnAPI';\nimport { ScrollService } from '../../components/scrollService';\n\nconst scrollService = new ScrollService();\n\nconst apiMovie = new ApiMovie();\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst svgCloseIcon = `<svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path class=\"svg-close-icon\" d=\"M11.25 11.25L0.75 0.75M11.25 0.75L0.75 11.25\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>`;\nconst contentPath = document.querySelector('.hero-content');\n\n// --------------------------ТЕСТ - Трендові фільми дня та тижня\n\nasync function getTrendMovieOfDay() {\n  try {\n    const response = await apiMovie.getTrend('day');\n\n    const randomFilms = randomElement(response.data.results);\n\n    if (response.data.results.length === 0) {\n      createDefaultMarkup(contentPath);\n\n      DefaultMarkupSettings();\n    } else {\n      createMarkupFilm(randomFilms.slice(0, 5), contentPath);\n    }\n  } catch (error) {\n    console.log('Error:', error);\n  }\n}\n\ngetTrendMovieOfDay();\n\nasync function createMarkupFilm(response, path) {\n  const markup = response\n    .map(({ original_title, overview, backdrop_path, vote_average, id }) => {\n      return `\n      <swiper-slide class=\"hero-film_background hero-wrap\"\n        style=\"background-image: url(${IMG_URL}${backdrop_path})\"\n        data-movie-id=\"${id}\"\n      >\n        <div class=\"hero-wrap\">\n          <h1 class=\"hero-title\">${original_title}</h1>\n          <div class=\"hero-stars\">${getStar(vote_average)}</div>\n          <p class=\"hero-description-js\">${overview}</p>\n          <div class=\"hero-buttons\">\n            <button class=\"hero-button-trailer\">\n              Watch trailer\n            </button>\n            <button class=\"hero-button-moredetails\">\n              More details\n            </button>\n          </div>\n        </div>\n      </swiper-slide>\n    `;\n    })\n    .join('');\n  path.innerHTML = markup;\n  showTrailer(response);\n  showModalMoreDetails(response);\n}\n\nfunction createDefaultMarkup(path) {\n  const markup = `\n  <h1 class=\"hero-title-default\">Let’s Make Your Own Cinema</h1>\n    <p class=\"hero-description-default\">Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers.</p>\n    <a class=\"hero-link\" href=\"./catalog.html\">Get Started</a>\n    \n    <div class=\"hero-picture-default\">\n\n</div>\n`;\n  path.innerHTML = markup;\n}\n\nfunction randomElement(arr) {\n  arr = arr.sort(() => Math.random() - 0.5);\n\n  return arr;\n}\n\nfunction DefaultMarkupSettings() {\n  const heroDescription = document.querySelector('.hero-description-default');\n  const heroContent = document.querySelector('.hero-content');\n\n  heroContent.classList.add('hero-content-default');\n  heroContent.classList.remove('hero-content');\n  const screenSize = window.innerWidth;\n\n  if (screenSize > 768) {\n    heroDescription.textContent =\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  } else {\n    heroDescription.textContent =\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. \";\n  }\n}\n\nasync function showTrailer(response) {\n  const buttons = document.querySelectorAll('.hero-button-trailer');\n\n  buttons.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      onButtonClick(response[index].id);\n    });\n  });\n\n  async function onButtonClick(movieId) {\n    try {\n      const youtubeTrailers = await apiMovie.getTrailer(movieId);\n      const trailer = youtubeTrailers.data.results.find(\n        el => el.type === 'Trailer' || el.name === 'Official Trailer'\n      );\n\n      if (!trailer) {\n        throw new Error('Trailer not found');\n      }\n\n      const instance = basicLightbox.create(\n        `\n        <iframe class=\"iframe\" src=\"https://www.youtube.com/embed/${trailer.key}\" width=\"560\" height=\"315\" frameborder=\"0\"></iframe>\n      `,\n        {\n          handlerEscape: null,\n          onShow() {\n            scrollService.blockScroll();\n            this.handlerEscape = handlerEsc.bind(instance);\n            document.addEventListener('keydown', this.handlerEscape);\n          },\n          onClose() {\n            scrollService.restoreScroll();\n            document.removeEventListener('keydown', this.handlerEscape);\n          },\n        }\n      );\n\n      instance.show();\n    } catch (error) {\n      markupForMistake().show();\n      console.log('Error:', error);\n    }\n  }\n}\n\nfunction handlerEsc(evt) {\n  if (evt.code === 'Escape') {\n    this.close();\n  }\n}\n\nfunction handlerClose() {\n  this.close();\n}\n\nfunction markupForMistake() {\n  const instance = basicLightbox.create(`\n  <div class=\"trailer-fail\">\n  <p class=\"trailer-fail-text\">OOPS...<br/> We are very sorry!<br /> But we couldn’t find the trailer.</p>\n  <button type=\"button\" class=\"btn-close\"><svg class=\"btn-close--svg\">\n  <use href='/sprite.a5e5e87b.svg#icon-close'></use>\n  </svg>\n  </button>\n  <div class=\"bg-box\"></div>\n  </div>\n  `);\n\n  const buttonClose = instance.element().querySelector('.btn-close');\n  buttonClose.addEventListener('click', onButtonCloseClick);\n  function onButtonCloseClick() {\n    instance.close();\n    buttonClose.removeEventListener('click', onButtonCloseClick);\n  }\n\n  return instance;\n}\n\n//! modal------------------\n\nfunction showModalMoreDetails(response) {\n  const buttonsMoreDetails = document.querySelectorAll(\n    '.hero-button-moredetails'\n  );\n\n  buttonsMoreDetails.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      onButtonMoreClick(response[index].id);\n    });\n  });\n\n  async function onButtonMoreClick(movieId) {\n    try {\n      const movie = await apiMovie.getMovieInfo(movieId);\n\n      const instance = basicLightbox.create(markupMovieCard(movie.data), {\n        handlerEscape: null,\n        handlerBtnClose: null,\n\n        onShow: instance => {\n          scrollService.blockScroll();\n\n          const addRemoveBtn = instance\n            .element()\n            .querySelector('button[data-action=\"add-remove-to-my-library\"]');\n\n          const serviceAddRemoveBtn = new ServiceAddRemoveBtn(\n            addRemoveBtn,\n            movie\n          );\n          serviceAddRemoveBtn.setButtonName();\n\n          const escapeHandler = handlerEsc.bind(instance);\n          document.addEventListener('keydown', escapeHandler);\n\n          // this.handlerEscape = handlerEsc.bind(instance);\n          // document.addEventListener('keydown', this.handlerEscape);\n\n          const closeButton = instance\n            .element()\n            .querySelector('#closeModalPopUp');\n          const btnCloseHandler = handlerClose.bind(instance);\n          closeButton.addEventListener('click', btnCloseHandler);\n\n          // const btnCloseEl = instance\n          //   .element()\n          //   .querySelector('#closeModalPopUp');\n\n          // this.handlerBtnClose = handlerClose.bind(instance);\n          // btnCloseEl.addEventListener('click', this.handlerBtnClose);\n        },\n\n        onClose() {\n          scrollService.restoreScroll();\n\n          document.removeEventListener('keydown', this.handlerEscape);\n          document.removeEventListener('click', this.handlerBtnClose);\n        },\n      });\n\n      instance.show();\n\n      showTrailer(movie);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nfunction markupMovieCard({\n  id,\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const allGenres = genres.map(({ name }) => name).join(', ');\n  return `\n<div class=\"pop-up-modal visual\" id=\"modalPopUp\">\n  <button class=\"pop-up-modal__close\" id=\"closeModalPopUp\">\n    ${svgCloseIcon}\n  </button>\n  <div class=\"pop-up-modal__container\">\n    <img src=\"${IMG_URL}${poster_path}\" alt=\"image.png\" class=\"pop-up-modal__img\" />\n    <div class=\"pop-card\" id=\"${id}\">\n      <h2 class=\"pop-up-modal__title\">${original_title}</h2>\n      <div class=\"pop-up-modal__blok\">\n        <ul class=\"pop-up-modal__list\">\n          <li class=\"pop-up-modal__link\">Vote / Votes</li>\n          <li class=\"pop-up-modal__link\">Popularity</li>\n          <li class=\"pop-up-modal__link\">Genre</li>\n          <li class=\"pop-up-modal__link\">ABOUT</li>\n        </ul>\n        <ul class=\"pop-up-modal__list\">\n          <li class=\"pop-up-modal__link-item item-votes\">\n            <div class=\"vote\">${vote_average}</div>\n            &nbsp;/&nbsp;\n            <div class=\"votes\">${vote_count}</div>\n          </li>\n          <li class=\"pop-up-modal__link-item popularity\">${popularity}</li>\n          <li class=\"pop-up-modal__link-item genres\">${allGenres}</li>\n        </ul>\n      </div>\n      <div class=\"pop-up-modal__about\">\n        <p class=\"pop-up-modal__about-txt\">${overview}</p>\n      </div>\n        <div class=\"pop-up-modal-wrap-btn\">\n          <button\n            class=\"add-remove-btn button-accent\"\n            type=\"button\"\n            data-action=\"add-remove-to-my-library\"\n          ></button>\n        </div>\n    </div>\n  </div>\n</div>\n`;\n}\n","import ApiMovie from './api/themoviedbAPI/fetch-movie';\n\nimport { createMarkupFilmsCards } from './components/createMarkupFilmCard';\nimport { Loader } from './loader';\nconst list = document.querySelector('.card-list');\n\nconst apiMovie = new ApiMovie();\n\nconst loader = new Loader();\n\nasync function getTrendMovieOfWeek() {\n  try {\n    loader.onShow();\n    const response = await apiMovie.getTrend('week');\n\n    const correctList = response.data.results.slice(0, 3);\n\n    list.innerHTML = await createMarkupFilmsCards(correctList);\n  } catch (error) {\n    console.log('Error:', error);\n  }\n  loader.onClose();\n}\n\ngetTrendMovieOfWeek();\n"],"names":["$9IVsr","parcelRequire","default","$bpxeT","$4c6aab06649ec8ef$var$apiMovie","$4c6aab06649ec8ef$var$movieDescription","document","querySelector","$4c6aab06649ec8ef$var$_getNewFilms","$parcel$interopDefault","$2TvXO","mark","_callee","response","randomFilm","movie","addRemoveBtn","getNewFilms","_ctx","sent","$4c6aab06649ec8ef$var$randomElement","data","results","getMovieInfo","id","innerHTML","$4c6aab06649ec8ef$var$createUpcomingMovieMarkup","$2IWo3","ServiceAddRemoveBtn","setButtonName","console","log","t0","apply","this","arguments","arr","Math","floor","random","length","param1","backdrop_path","original_title","release_date","vote_average","vote_count","popularity","genres","overview","allGenres","map","param","name","join","concat","$4c6aab06649ec8ef$var$getNewFilms","$ba35f1c179c6337c$var$scrollService","ScrollService","$ba35f1c179c6337c$var$apiMovie","$ba35f1c179c6337c$var$IMG_URL","$ba35f1c179c6337c$var$contentPath","$ba35f1c179c6337c$var$_getTrendMovieOfDay","randomFilms","getTrend","$ba35f1c179c6337c$var$randomElement","$ba35f1c179c6337c$var$createDefaultMarkup","$ba35f1c179c6337c$var$DefaultMarkupSettings","$ba35f1c179c6337c$var$createMarkupFilm","slice","path","$ba35f1c179c6337c$var$_createMarkupFilm","markup","$h7PvK","getStar","$ba35f1c179c6337c$var$showTrailer","$ba35f1c179c6337c$var$showModalMoreDetails","sort","heroDescription","heroContent","classList","add","remove","screenSize","window","innerWidth","textContent","$ba35f1c179c6337c$var$_showTrailer","_callee1","onButtonClick","_onButtonClick","movieId","youtubeTrailers","trailer","instance","getTrailer","find","el","type","Error","$dyT35","create","key","handlerEscape","onShow","blockScroll","$ba35f1c179c6337c$var$handlerEsc","bind","addEventListener","onClose","restoreScroll","removeEventListener","show","$ba35f1c179c6337c$var$markupForMistake","querySelectorAll","forEach","button","index","evt","code","close","$ba35f1c179c6337c$var$handlerClose","buttonClose","element","onButtonCloseClick","_onButtonMoreClick","$ba35f1c179c6337c$var$markupMovieCard","handlerBtnClose","escapeHandler","closeButton","btnCloseHandler","onButtonMoreClick","poster_path","$ba35f1c179c6337c$var$getTrendMovieOfDay","$fe3a3a1ac89f0559$var$list","$fe3a3a1ac89f0559$var$apiMovie","$fe3a3a1ac89f0559$var$loader","$kvC6y","Loader","$fe3a3a1ac89f0559$var$_getTrendMovieOfWeek","correctList","$bxNz7","createMarkupFilmsCards","$fe3a3a1ac89f0559$var$getTrendMovieOfWeek"],"version":3,"file":"index.9852d435.js.map"}