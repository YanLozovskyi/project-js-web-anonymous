{"mappings":"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","sources":["src/js/api/themoviedbAPI/test.js","src/js/upcoming.js","src/js/pages/home/hero.js","src/js/weekly-trends.js"],"sourcesContent":["import ApiMovie from './fetch-movie';\nconst apiMovie = new ApiMovie();\n\n// --------------------------ТЕСТ - Трендові фільми дня та тижня\n// async function getTrendMovieOfDay() {\n//   try {\n//     const response = await apiMovie.getTrend('day');\n//     console.log('Трендові фільми дня:', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrendMovieOfDay();\n\n// async function getTrendMovieOfWeek() {\n//   try {\n//     const response = await apiMovie.getTrend('week');\n//     console.log('Трендові фільми тижня :', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrendMovieOfWeek();\n\n// --------------------------ТЕСТ - Нові фільми\n\n//  async function getNewFilms() {\n//    try {\n//      const response = await apiMovie.getNewFilms();\n//      console.log('Нові фільми', response.data.results);\n//    } catch (error) {\n//      console.log('Error:', error);\n//    }\n//  }\n//  getNewFilms();\n\n// --------------------------ТЕСТ - Фільми за ключовим словом + за роком\n\n// apiMovie\n//   .searchByQueryYear('John Wick', 2023)\n//   .then(movies => {\n//     console.log(`Пошук результата:`, movies);\n//   })\n//   .catch(error => {\n//     console.log('Error:', error);\n//   });\n// async function getNewFilms() {\n//   try {\n//     const response = await apiMovie.getNewFilms(2);\n//     console.log('Нові фільми', response.data.results);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getNewFilms();\n\n// --------------------------ТЕСТ - Фільми за ключовим словом + за роком\n\n// async function searchByQueryYear() {\n//   try {\n//     if (true) {\n//       apiMovie.query = 'John Wick';\n//       const response = await apiMovie.searchByQueryYear(1);\n//       console.log('Пошук фільмів по назві:', response.data.results);\n//     } else {\n//       apiMovie.query = 'John Wick';\n//       const response = await apiMovie.searchByQueryYear(1);\n//       const filteredResults = response.data.results.filter(movie =>\n//         movie.release_date.includes(2023)\n//       );\n//       console.log('Пошук фільмів по назві + фільтр по року:', filteredResults);\n//     }\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// searchByQueryYear();\n\n// try to refactor\n\n// async function searchByQueryYear(year) {\n//   try {\n//     const response = await apiMovie.searchByQueryYear('John Wick');\n//     console.log(`Пошук результата:`, response);\n//     const filteredResults = response.data.results.filter(\n//       movie => movie.release_date && movie.release_date.includes(year)\n//     );\n//     return filteredResults;\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// console.log(searchByQueryYear(2023));\n\n//--------------------------ТЕСТ- Детальна інформація про фільм\n\n// const movieId = 245891;\n\n// async function getMovieInfo() {\n//   try {\n//     const response = await apiMovie.getMovieInfo(movieId);\n//     console.log('Детальна інформація про фільм:', response.data);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// getMovieInfo();\n\n//--------------------------ТЕСТ - Повна інформація про можливий трейлер фільма на ютубі\n\n// const movieId = 245891;\n// async function getTrailer() {\n//   try {\n//     const response = await apiMovie.getTrailer(movieId);\n//     console.log('Movie Trailer:', response.data.results[0]);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n// getTrailer();\n\n//--------------------------ТЕСТ - Перелік жанрів\n\n// async function getGenres() {\n//   try {\n//     const response = await apiMovie.getGenresList();\n//     console.log('Перелік жанрів:', response.data.genres);\n//   } catch (error) {\n//     console.log('Error:', error);\n//   }\n// }\n\n// getGenres();\n","import ApiMovie from './api/themoviedbAPI/fetch-movie';\n\nimport { ServiceAddRemoveBtn } from './api/ServiceAddRemoveBtn/ServiceAddRemoveBtnAPI';\n\nconst apiMovie = new ApiMovie();\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst movieDescription = document.querySelector('.movieDescription');\n\ngetNewFilms();\n\nasync function getNewFilms() {\n  try {\n    const response = await apiMovie.getNewFilms();\n    const randomFilm = randomElement(response.data.results);\n\n    const movie = await apiMovie.getMovieInfo(randomFilm.id);\n\n    movieDescription.innerHTML = createUpcomingMovieMarkup(movie.data);\n\n    const addRemoveBtn = document.querySelector('.add-remove-btn');\n\n    const serviceAddRemoveBtn = new ServiceAddRemoveBtn(addRemoveBtn, movie);\n\n    serviceAddRemoveBtn.setButtonName();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction randomElement(arr) {\n  const rand = Math.floor(Math.random() * arr.length);\n  return arr[rand];\n}\n\nfunction createUpcomingMovieMarkup({\n  id,\n  backdrop_path,\n  original_title,\n  release_date,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const allGenres = genres.map(({ name }) => name).join(', ');\n  return `\n    <div class=\"image-upcoming\">\n    <img\n      class=\"gallery-item__img\"\n      src=\"${IMAGE_URL}${backdrop_path}\"\n      alt=\"movie\"\n      loading=\"lazy\"\n    />\n  </div>\n  <div class=\"gallery-item\" id=\"${id}\">\n    <h3 class=\"info-item-title\">${original_title}</h3>\n    <div class=\"info\">\n      <div class=\"info-item-one-part\">\n        <p class=\"info-item\">\n          <b>Release date</b\n          ><span class=\"info-item-second\">${release_date}</span>\n        </p>\n        <p class=\"info-item\">\n          <b>Vote / Votes</b\n          ><span class=\"info-item-fourth vote-text\">${vote_average}</span> /\n          <span class=\"info-item-fourth vote-text\">${vote_count}</span>\n        </p>\n      </div>\n      <div class=\"info-item-two-part\">\n        <p class=\"info-item\"><b>Popularity</b>${popularity}</p>\n        <p class=\"info-item\"><b>Genre </b>${allGenres}</p>\n      </div>\n    </div>\n    <div class=\"info-item-about\">\n      <p class=\"info-item-about-movie\">\n        <b><span class=\"info-item-thirty\">About</span></b\n        >${overview}\n      </p>\n    </div>\n    <button type=\"button\" class=\"add-remove-btn button-accent\" id=\"fix\"></button>\n  </div>`;\n}\n","import '~node_modules/swiper/swiper-element-bundle.min.js';\nimport ApiMovie from '../../api/themoviedbAPI/fetch-movie';\nimport { getStar } from '../../components/getStar';\nimport * as basicLightbox from 'basiclightbox';\nimport { ServiceAddRemoveBtn } from '../../api/ServiceAddRemoveBtn/ServiceAddRemoveBtnAPI';\nimport { ScrollService } from '../../components/scrollService';\n\nconst scrollService = new ScrollService();\n\nconst apiMovie = new ApiMovie();\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\nconst svgCloseIcon = `<svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path class=\"svg-close-icon\" d=\"M11.25 11.25L0.75 0.75M11.25 0.75L0.75 11.25\" stroke=\"#ffffff\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>`;\nconst contentPath = document.querySelector('.hero-content');\n\nconst contentPathDefault = document.querySelector('.hero-default');\n// --------------------------ТЕСТ - Трендові фільми дня та тижня\n\nasync function getTrendMovieOfDay() {\n  try {\n    const response = await apiMovie.getTrend('day');\n    const randomFilms = randomElement(response.data.results);\n\n    if (response.data.results.length === 0) {\n      createDefaultMarkup(contentPathDefault);\n\n      DefaultMarkupSettings();\n    } else {\n      createMarkupFilm(randomFilms.slice(0, 5), contentPath);\n    }\n  } catch (error) {\n    console.log('Error:', error);\n  }\n}\n\ngetTrendMovieOfDay();\n\nasync function createMarkupFilm(response, path) {\n  const markup = response\n    .map(({ original_title, overview, backdrop_path, vote_average, id }) => {\n      return `\n      <swiper-slide class=\"hero-film_background hero-wrap\"\n        style=\"background-image: url(${IMG_URL}${backdrop_path})\"\n        data-movie-id=\"${id}\"\n      >\n        <div class=\"hero-wrap\">\n          <h1 class=\"hero-title\">${original_title}</h1>\n          <div class=\"hero-stars\">${getStar(vote_average)}</div>\n          <p class=\"hero-description-js\">${overview}</p>\n          <div class=\"hero-buttons\">\n            <button class=\"hero-button-trailer \">\n              Watch trailer\n            </button>\n            <button class=\"hero-button-moredetails\n          \">\n              More details\n            </button>\n          </div>\n        </div>\n      </swiper-slide>\n    `;\n    })\n    .join('');\n  path.innerHTML = markup;\n  showTrailer(response);\n  showModalMoreDetails(response);\n}\n\nfunction createDefaultMarkup(path) {\n  const markup = `\n  <div class=\"hero-content\">\n  <h1 class=\"hero-title-default\">Let’s Make Your Own Cinema</h1>\n    <p class=\"hero-description-default\">Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers.</p>\n    <a class=\"hero-link\" href=\"./catalog.html\">Get Started</a>\n    \n    <div class=\"hero-picture-default\">\n</div>\n</div>\n`;\n  path.innerHTML = markup;\n}\n\nfunction randomElement(arr) {\n  arr = arr.sort(() => Math.random() - 0.5);\n\n  return arr;\n}\n\nfunction DefaultMarkupSettings() {\n  const heroDescription = document.querySelector('.hero-description-default');\n  const heroContent = document.querySelector('.hero-content');\n\n  heroContent.classList.add('hero-content-default');\n  heroContent.classList.add('container');\n\n  heroContent.classList.remove('hero-content');\n  const screenSize = window.innerWidth;\n\n  if (screenSize > 768) {\n    heroDescription.textContent =\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  } else {\n    heroDescription.textContent =\n      \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. \";\n  }\n}\n\nasync function showTrailer(response) {\n  const buttons = document.querySelectorAll('.hero-button-trailer');\n\n  buttons.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      onButtonClick(response[index].id);\n    });\n  });\n\n  async function onButtonClick(movieId) {\n    try {\n      const youtubeTrailers = await apiMovie.getTrailer(movieId);\n      const trailer = youtubeTrailers.data.results.find(\n        el => el.type === 'Trailer' || el.name === 'Official Trailer'\n      );\n\n      if (!trailer) {\n        throw new Error('Trailer not found');\n      }\n\n      const instance = basicLightbox.create(\n        `\n        <iframe class=\"iframe\" src=\"https://www.youtube.com/embed/${trailer.key}\" width=\"560\" height=\"315\" frameborder=\"0\"></iframe>\n      `,\n        {\n          handlerEscape: null,\n          onShow() {\n            scrollService.blockScroll();\n            this.handlerEscape = handlerEsc.bind(instance);\n            document.addEventListener('keydown', this.handlerEscape);\n          },\n          onClose() {\n            scrollService.restoreScroll();\n            document.removeEventListener('keydown', this.handlerEscape);\n          },\n        }\n      );\n\n      instance.show();\n    } catch (error) {\n      markupForMistake().show();\n      console.log('Error:', error);\n    }\n  }\n}\n\nfunction handlerEsc(evt) {\n  if (evt.code === 'Escape') {\n    this.close();\n  }\n}\n\nfunction handlerClose() {\n  this.close();\n}\n\nfunction markupForMistake() {\n  const instance = basicLightbox.create(`\n  <div class=\"trailer-fail\">\n  <p class=\"trailer-fail-text\">OOPS...<br/> We are very sorry!<br /> But we couldn’t find the trailer.</p>\n  <button type=\"button\" class=\"btn-close\"><svg class=\"btn-close--svg\">\n  <use href='/sprite.a5e5e87b.svg#icon-close'></use>\n  </svg>\n  </button>\n  <div class=\"bg-box\"></div>\n  </div>\n  `);\n\n  const buttonClose = instance.element().querySelector('.btn-close');\n  buttonClose.addEventListener('click', onButtonCloseClick);\n  function onButtonCloseClick() {\n    instance.close();\n    buttonClose.removeEventListener('click', onButtonCloseClick);\n  }\n\n  return instance;\n}\n\n//! modal------------------\n\nfunction showModalMoreDetails(response) {\n  const buttonsMoreDetails = document.querySelectorAll(\n    '.hero-button-moredetails'\n  );\n\n  buttonsMoreDetails.forEach((button, index) => {\n    button.addEventListener('click', () => {\n      onButtonMoreClick(response[index].id);\n    });\n  });\n\n  async function onButtonMoreClick(movieId) {\n    try {\n      const movie = await apiMovie.getMovieInfo(movieId);\n\n      const instance = basicLightbox.create(markupMovieCard(movie.data), {\n        handlerEscape: null,\n        handlerBtnClose: null,\n\n        onShow: instance => {\n          scrollService.blockScroll();\n\n          const addRemoveBtn = instance\n            .element()\n            .querySelector('button[data-action=\"add-remove-to-my-library\"]');\n\n          const serviceAddRemoveBtn = new ServiceAddRemoveBtn(\n            addRemoveBtn,\n            movie\n          );\n          serviceAddRemoveBtn.setButtonName();\n\n          const escapeHandler = handlerEsc.bind(instance);\n          document.addEventListener('keydown', escapeHandler);\n\n          // this.handlerEscape = handlerEsc.bind(instance);\n          // document.addEventListener('keydown', this.handlerEscape);\n\n          const closeButton = instance\n            .element()\n            .querySelector('#closeModalPopUp');\n          const btnCloseHandler = handlerClose.bind(instance);\n          closeButton.addEventListener('click', btnCloseHandler);\n\n          // const btnCloseEl = instance\n          //   .element()\n          //   .querySelector('#closeModalPopUp');\n\n          // this.handlerBtnClose = handlerClose.bind(instance);\n          // btnCloseEl.addEventListener('click', this.handlerBtnClose);\n        },\n\n        onClose() {\n          scrollService.restoreScroll();\n\n          document.removeEventListener('keydown', this.handlerEscape);\n          document.removeEventListener('click', this.handlerBtnClose);\n        },\n      });\n\n      instance.show();\n\n      showTrailer(movie);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nfunction markupMovieCard({\n  id,\n  poster_path,\n  original_title,\n  vote_average,\n  vote_count,\n  popularity,\n  genres,\n  overview,\n}) {\n  const allGenres = genres.map(({ name }) => name).join(', ');\n  return `\n<div class=\"pop-up-modal visual\" id=\"modalPopUp\">\n  <button class=\"pop-up-modal__close\" id=\"closeModalPopUp\">\n    ${svgCloseIcon}\n  </button>\n  <div class=\"pop-up-modal__container\">\n    <img src=\"${IMG_URL}${poster_path}\" alt=\"image.png\" class=\"pop-up-modal__img\" />\n    <div class=\"pop-card\" id=\"${id}\">\n      <h2 class=\"pop-up-modal__title\">${original_title}</h2>\n      <div class=\"pop-up-modal__blok\">\n        <ul class=\"pop-up-modal__list\">\n          <li class=\"pop-up-modal__link\">Vote / Votes</li>\n          <li class=\"pop-up-modal__link\">Popularity</li>\n          <li class=\"pop-up-modal__link\">Genre</li>\n          <li class=\"pop-up-modal__link\">ABOUT</li>\n        </ul>\n        <ul class=\"pop-up-modal__list\">\n          <li class=\"pop-up-modal__link-item item-votes\">\n            <div class=\"vote\">${vote_average}</div>\n            &nbsp;/&nbsp;\n            <div class=\"votes\">${vote_count}</div>\n          </li>\n          <li class=\"pop-up-modal__link-item popularity\">${popularity}</li>\n          <li class=\"pop-up-modal__link-item genres\">${allGenres}</li>\n        </ul>\n      </div>\n      <div class=\"pop-up-modal__about\">\n        <p class=\"pop-up-modal__about-txt\">${overview}</p>\n      </div>\n        <div class=\"pop-up-modal-wrap-btn\">\n          <button\n            class=\"add-remove-btn button-accent\"\n            type=\"button\"\n            data-action=\"add-remove-to-my-library\"\n          ></button>\n        </div>\n    </div>\n  </div>\n</div>\n`;\n}\n","import ApiMovie from './api/themoviedbAPI/fetch-movie';\n\nimport { createMarkupFilmsCards } from './components/createMarkupFilmCard';\nimport { Loader } from './loader';\nconst list = document.querySelector('.card-list');\n\nconst apiMovie = new ApiMovie();\n\nconst loader = new Loader();\n\nasync function getTrendMovieOfWeek() {\n  try {\n    loader.onShow();\n    const response = await apiMovie.getTrend('week');\n\n    const correctList = response.data.results.slice(0, 3);\n\n    list.innerHTML = await createMarkupFilmsCards(correctList);\n  } catch (error) {\n    console.log('Error:', error);\n  }\n  loader.onClose();\n}\n\ngetTrendMovieOfWeek();\n"],"names":["$lWmWv","parcelRequire","default","$65414923e0a79c46$var$apiMovie","$65414923e0a79c46$var$movieDescription","document","querySelector","async","randomFilm","arr","rand","Math","floor","random","length","$65414923e0a79c46$var$randomElement","getNewFilms","data","results","movie","getMovieInfo","id","innerHTML","backdrop_path","original_title","release_date","vote_average","vote_count","popularity","genres","overview","allGenres","map","name","join","$65414923e0a79c46$var$createUpcomingMovieMarkup","addRemoveBtn","$7EVBB","ServiceAddRemoveBtn","setButtonName","error","console","log","$65414923e0a79c46$var$getNewFilms","$05be8b36cd7dbad9$var$scrollService","ScrollService","$05be8b36cd7dbad9$var$apiMovie","$05be8b36cd7dbad9$var$svgCloseIcon","$05be8b36cd7dbad9$var$contentPath","$05be8b36cd7dbad9$var$contentPathDefault","$05be8b36cd7dbad9$var$showTrailer","response","querySelectorAll","forEach","button","index","addEventListener","movieId","trailer","getTrailer","find","el","type","Error","instance","$9B8F0","create","key","handlerEscape","onShow","blockScroll","this","$05be8b36cd7dbad9$var$handlerEsc","bind","onClose","restoreScroll","removeEventListener","show","buttonClose","element","onButtonCloseClick","close","$05be8b36cd7dbad9$var$markupForMistake","onButtonClick","evt","code","$05be8b36cd7dbad9$var$handlerClose","getTrend","randomFilms","sort","path","markup","$05be8b36cd7dbad9$var$createDefaultMarkup","heroDescription","heroContent","classList","add","remove","window","innerWidth","textContent","$05be8b36cd7dbad9$var$DefaultMarkupSettings","$jaYit","getStar","onButtonMoreClick","poster_path","$05be8b36cd7dbad9$var$markupMovieCard","handlerBtnClose","escapeHandler","closeButton","btnCloseHandler","$05be8b36cd7dbad9$var$showModalMoreDetails","$05be8b36cd7dbad9$var$createMarkupFilm","slice","$05be8b36cd7dbad9$var$getTrendMovieOfDay","$d395fb91404b7f70$var$list","$d395fb91404b7f70$var$apiMovie","$d395fb91404b7f70$var$loader","$gjiCh","Loader","correctList","$1nG8V","createMarkupFilmsCards","$d395fb91404b7f70$var$getTrendMovieOfWeek"],"version":3,"file":"index.c3f5c95b.js.map"}