{"mappings":"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","sources":["src/js/pages/my-library/my-library.js","src/js/pages/my-library/refs.js","src/js/pages/my-library/markupContentTextMessage.js"],"sourcesContent":["import Storage from '../../api/localStorageAPI/localStorageAPI';\nimport { STORAGE_KEY } from '../../localStorageKey/localStorageKey';\nimport { refs } from './refs';\nimport { createMarkupFilmsCards } from '../../components/createMarkupFilmCard';\nimport { markupContentTextMessage } from './markupContentTextMessage';\nimport { Loader } from '../../loader';\nimport SlimSelect from 'slim-select';\nimport 'slim-select/dist/slimselect.css';\n\nconst PER_PAGE = 6;\n\nconst loader = new Loader();\n\nlet correctGenre = 'All';\nlet totalPage;\nlet page = 0;\nlet startIndex = 0;\nlet endIndex = 0;\nlet correctGenreMovieList = [];\n\nconst dataStorage = Storage.load(STORAGE_KEY.myLibraryMoviesList);\n\nrenderContentBasedOnConditions();\n\ndocument.addEventListener('click', function (e) {\n  if (e.target.dataset.action === 'add-remove-to-my-library') {\n    const dataStorage = Storage.load(STORAGE_KEY.myLibraryMoviesList);\n    if (dataStorage.length === 0) {\n      refs.genreList.removeEventListener('change', onSelectGenreListChange);\n      refs.myLibrarySection.classList.add(\n        'my-library-content-text-message-section'\n      );\n      refs.libraryContent.innerHTML = markupContentTextMessage();\n    }\n\n    renderLibraryCards(dataStorage);\n  }\n});\n\nfunction renderContentBasedOnConditions() {\n  if (dataStorage?.length === 0) {\n    refs.genreList.removeEventListener('change', onSelectGenreListChange);\n    refs.myLibrarySection.classList.add(\n      'my-library-content-text-message-section'\n    );\n    refs.libraryContent.innerHTML = markupContentTextMessage();\n  } else if (dataStorage) {\n    //? Отримую унікальні ID жанрів фільмів, які є у localStorage і за допомогою функції createSelectOptionMarkup отримую розмітку з жанром, і вставляю у select\n    2;\n    dataStorage\n      .reduce((acc, el) => [...acc, ...el.genres], [])\n      .filter(\n        (genre, index, self) =>\n          index ===\n          self.findIndex(g => g.id === genre.id && g.name === genre.name)\n      )\n      .forEach(el =>\n        refs.genreList.insertAdjacentHTML(\n          'beforeend',\n          createSelectOptionMarkup(el)\n        )\n      );\n\n    new SlimSelect({\n      select: '#my-library-genre-list',\n      settings: {\n        // showSearch: false, //? Приберає поле пошуку\n        searchText: 'No genre',\n      },\n    });\n\n    refs.genreList.addEventListener('change', onSelectGenreListChange);\n    renderLibraryCards(dataStorage);\n  } else {\n    refs.genreList.removeEventListener('change', onSelectGenreListChange);\n    refs.myLibrarySection.classList.add(\n      'my-library-content-text-message-section'\n    );\n    refs.libraryContent.innerHTML = markupContentTextMessage();\n  }\n}\n\nfunction createSelectOptionMarkup({ id, name }) {\n  return ` <option value=\"${id}\">${name}</option>`;\n}\n\nfunction onSelectGenreListChange(e) {\n  page = 0;\n  correctGenre = Number(e.currentTarget.value);\n\n  if (!correctGenre) {\n    correctGenre = 'All';\n    renderLibraryCards(dataStorage);\n    return;\n  }\n  correctGenreMovieList = dataStorage.filter(el => {\n    return el.genres.some(genre => genre.id === correctGenre);\n  });\n  renderLibraryCards(correctGenreMovieList);\n}\n\nasync function renderLibraryCards(movieList) {\n  loader.onShow();\n  startIndex = 0;\n  endIndex = PER_PAGE;\n  refs.moviesList.innerHTML = '';\n  refs.loadMoreButton.style.display = 'none';\n  if (movieList.length > PER_PAGE) {\n    refs.loadMoreButton.style.display = 'block';\n    refs.loadMoreButton.addEventListener('click', onloadMoreButtonClick);\n    localStoragePagination(startIndex, endIndex, movieList);\n  } else {\n    refs.moviesList.innerHTML = await createMarkupFilmsCards(movieList);\n  }\n  loader.onClose();\n}\n\nfunction onloadMoreButtonClick() {\n  loader.onShow();\n  refs.loadMoreButton.blur();\n\n  startIndex += PER_PAGE;\n  endIndex += PER_PAGE;\n\n  if (correctGenre === 'All') {\n    localStoragePagination(startIndex, endIndex, dataStorage);\n  } else {\n    localStoragePagination(startIndex, endIndex, correctGenreMovieList);\n  }\n  loader.onClose();\n}\n\nasync function localStoragePagination(start, end, data) {\n  page += 1;\n\n  totalPage = data.length / PER_PAGE;\n\n  if (totalPage > page) {\n    const pagination = data.slice(start, end);\n\n    refs.moviesList.insertAdjacentHTML(\n      'beforeend',\n      await createMarkupFilmsCards(pagination)\n    );\n  } else {\n    const pagination = data.slice(start, end);\n    refs.moviesList.insertAdjacentHTML(\n      'beforeend',\n      await createMarkupFilmsCards(pagination)\n    );\n\n    refs.loadMoreButton.style.display = 'none';\n  }\n}\n","export const refs = {\n  myLibrarySection: document.getElementById('my-library'),\n  libraryContent: document.querySelector('.js-my-library-content'),\n  genreList: document.querySelector('.js-my-library-genre-list'),\n  moviesList: document.querySelector('.js-my-library-movies-list'),\n  loadMoreButton: document.querySelector('.js-my-library-load-more-button'),\n};\n","export function markupContentTextMessage() {\n  return ` \n    <p class=\"my-library-content-text-message\">\n        <span>OOPS...</span>\n        <span>We are very sorry!</span>\n        <span>You don’t have any movies at your library.</span>\n    </p>\n    <a class=\"button-accent my-library-content-text-message-button\" href=\"./catalog.html\">Search movie</a>\n    `;\n}\n"],"names":["$2xHB1","parcelRequire","$32ff713042e80194$export$21666b427502ea6d","myLibrarySection","document","getElementById","libraryContent","querySelector","genreList","moviesList","loadMoreButton","$71d3b8b212f642f2$var$loader","$gjiCh","Loader","$71d3b8b212f642f2$var$totalPage","$71d3b8b212f642f2$var$correctGenre","$71d3b8b212f642f2$var$page","$71d3b8b212f642f2$var$startIndex","$71d3b8b212f642f2$var$endIndex","$71d3b8b212f642f2$var$correctGenreMovieList","$71d3b8b212f642f2$var$dataStorage","default","load","$78eZQ","STORAGE_KEY","myLibraryMoviesList","$71d3b8b212f642f2$var$onSelectGenreListChange","e","Number","currentTarget","value","$71d3b8b212f642f2$var$renderLibraryCards","filter","el","genres","some","genre","id","async","movieList","onShow","innerHTML","style","display","length","addEventListener","$71d3b8b212f642f2$var$onloadMoreButtonClick","$71d3b8b212f642f2$var$localStoragePagination","$1nG8V","createMarkupFilmsCards","onClose","blur","start","end","data","pagination","slice","insertAdjacentHTML","removeEventListener","classList","add","reduce","acc","index","self","findIndex","g","name","forEach","$71d3b8b212f642f2$var$createSelectOptionMarkup","$parcel$interopDefault","$lewhg","select","settings","searchText","target","dataset","action","dataStorage1"],"version":3,"file":"my-library.3a92c33f.js.map"}