var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},t={},o=e.parcelRequirecf35;null==o&&((o=function(e){if(e in n)return n[e].exports;if(e in t){var o=t[e];delete t[e];var a={id:e,exports:{}};return n[e]=a,o.call(a.exports,a,a.exports),a.exports}var i=new Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,n){t[e]=n},e.parcelRequirecf35=o);new(0,(a=o("lWmWv")).default);var a=o("lWmWv"),i=o("7EVBB");const s=new(0,a.default),l=document.querySelector(".movieDescription");!async function(){try{const e=function(e){const n=Math.floor(Math.random()*e.length);return e[n]}((await s.getNewFilms()).data.results),n=await s.getMovieInfo(e.id);l.innerHTML=function({id:e,backdrop_path:n,original_title:t,release_date:o,vote_average:a,vote_count:i,popularity:s,genres:l,overview:r}){const c=l.map((({name:e})=>e)).join(", ");return`\n    <div class="image-upcoming">\n    <img\n      class="gallery-item__img"\n      src="https://image.tmdb.org/t/p/original/${n}"\n      alt="movie"\n      loading="lazy"\n    />\n  </div>\n  <div class="gallery-item" id="${e}">\n    <h3 class="info-item-title">${t}</h3>\n    <div class="info">\n      <div class="info-item-one-part">\n        <p class="info-item">\n          <b>Release date</b\n          ><span class="info-item-second">${o}</span>\n        </p>\n        <p class="info-item">\n          <b>Vote / Votes</b\n          ><span class="info-item-fourth vote-text">${a}</span> /\n          <span class="info-item-fourth vote-text">${i}</span>\n        </p>\n      </div>\n      <div class="info-item-two-part">\n        <p class="info-item"><b>Popularity</b>${s}</p>\n        <p class="info-item"><b>Genre </b>${c}</p>\n      </div>\n    </div>\n    <div class="info-item-about">\n      <p class="info-item-about-movie">\n        <b><span class="info-item-thirty">About</span></b\n        >${r}\n      </p>\n    </div>\n    <button type="button" class="add-remove-btn button-accent" id="fix"></button>\n  </div>`}(n.data);const t=document.querySelector(".add-remove-btn");new(0,i.ServiceAddRemoveBtn)(t,n).setButtonName()}catch(e){console.log(e)}}(),o("5WlD3");a=o("lWmWv");var r=o("jaYit"),c=o("9B8F0");i=o("7EVBB");const d=new(0,o("1pDlj").ScrollService),p=new(0,a.default),u='<svg width="10" height="10" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n<path class="svg-close-icon" d="M11.25 11.25L0.75 0.75M11.25 0.75L0.75 11.25" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round"/>\n</svg>',m=document.querySelector(".hero-content");async function v(e){document.querySelectorAll(".hero-button-trailer").forEach(((n,t)=>{n.addEventListener("click",(()=>{!async function(e){try{const n=(await p.getTrailer(e)).data.results.find((e=>"Trailer"===e.type||"Official Trailer"===e.name));if(!n)throw new Error("Trailer not found");const t=c.create(`\n        <iframe class="iframe" src="https://www.youtube.com/embed/${n.key}" width="560" height="315" frameborder="0"></iframe>\n      `,{handlerEscape:null,onShow(){d.blockScroll(),this.handlerEscape=h.bind(t),document.addEventListener("keydown",this.handlerEscape)},onClose(){d.restoreScroll(),document.removeEventListener("keydown",this.handlerEscape)}});t.show()}catch(e){(function(){const e=c.create('\n  <div class="trailer-fail">\n  <p class="trailer-fail-text">OOPS...<br/> We are very sorry!<br /> But we couldn’t find the trailer.</p>\n  <button type="button" class="btn-close"><svg class="btn-close--svg">\n  <use href=\'/sprite.a5e5e87b.svg#icon-close\'></use>\n  </svg>\n  </button>\n  <div class="bg-box"></div>\n  </div>\n  '),n=e.element().querySelector(".btn-close");function t(){e.close(),n.removeEventListener("click",t)}return n.addEventListener("click",t),e}
//! modal------------------
)().show(),console.log("Error:",e)}}(e[t].id)}))}))}function h(e){"Escape"===e.code&&this.close()}function f(){this.close()}!async function(){try{const e=await p.getTrend("day"),n=e.data.results.sort((()=>Math.random()-.5));0===e.data.results.length?(function(e){const n='\n  <h1 class="hero-title-default">Let’s Make Your Own Cinema</h1>\n    <p class="hero-description-default">Is a guide to creating a personalized movie theater experience. You\'ll need a projector, screen, and speakers.</p>\n    <a class="hero-link" href="./catalog.html">Get Started</a>\n    \n    <div class="hero-picture-default">\n\n</div>\n';e.innerHTML=n}(m),function(){const e=document.querySelector(".hero-description-default"),n=document.querySelector(".hero-content");n.classList.add("hero-content-default"),n.classList.remove("hero-content");window.innerWidth>768?e.textContent="Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.":e.textContent="Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. "}()):async function(e,n){const t=e.map((({original_title:e,overview:n,backdrop_path:t,vote_average:o,id:a})=>`\n      <swiper-slide class="hero-film_background hero-wrap"\n        style="background-image: url(https://image.tmdb.org/t/p/original/${t})"\n        data-movie-id="${a}"\n      >\n        <div class="hero-wrap">\n          <h1 class="hero-title">${e}</h1>\n          <div class="hero-stars">${(0,r.getStar)(o)}</div>\n          <p class="hero-description-js">${n}</p>\n          <div class="hero-buttons">\n            <button class="hero-button-trailer">\n              Watch trailer\n            </button>\n            <button class="hero-button-moredetails">\n              More details\n            </button>\n          </div>\n        </div>\n      </swiper-slide>\n    `)).join("");n.innerHTML=t,v(e),function(e){async function n(e){try{const n=await p.getMovieInfo(e);c.create(function({id:e,poster_path:n,original_title:t,vote_average:o,vote_count:a,popularity:i,genres:s,overview:l}){const r=s.map((({name:e})=>e)).join(", ");return`\n<div class="pop-up-modal visual" id="modalPopUp">\n  <button class="pop-up-modal__close" id="closeModalPopUp">\n    ${u}\n  </button>\n  <div class="pop-up-modal__container">\n    <img src="https://image.tmdb.org/t/p/original/${n}" alt="image.png" class="pop-up-modal__img" />\n    <div class="pop-card" id="${e}">\n      <h2 class="pop-up-modal__title">${t}</h2>\n      <div class="pop-up-modal__blok">\n        <ul class="pop-up-modal__list">\n          <li class="pop-up-modal__link">Vote / Votes</li>\n          <li class="pop-up-modal__link">Popularity</li>\n          <li class="pop-up-modal__link">Genre</li>\n          <li class="pop-up-modal__link">ABOUT</li>\n        </ul>\n        <ul class="pop-up-modal__list">\n          <li class="pop-up-modal__link-item item-votes">\n            <div class="vote">${o}</div>\n            &nbsp;/&nbsp;\n            <div class="votes">${a}</div>\n          </li>\n          <li class="pop-up-modal__link-item popularity">${i}</li>\n          <li class="pop-up-modal__link-item genres">${r}</li>\n        </ul>\n      </div>\n      <div class="pop-up-modal__about">\n        <p class="pop-up-modal__about-txt">${l}</p>\n      </div>\n        <div class="pop-up-modal-wrap-btn">\n          <button\n            class="add-remove-btn button-accent"\n            type="button"\n            data-action="add-remove-to-my-library"\n          ></button>\n        </div>\n    </div>\n  </div>\n</div>\n`}(n.data),{handlerEscape:null,handlerBtnClose:null,onShow:e=>{d.blockScroll();const t=e.element().querySelector('button[data-action="add-remove-to-my-library"]');new(0,i.ServiceAddRemoveBtn)(t,n).setButtonName(),this.handlerEscape=h.bind(e),document.addEventListener("keydown",this.handlerEscape);const o=e.element().querySelector("#closeModalPopUp");this.handlerBtnClose=f.bind(e),o.addEventListener("click",this.handlerBtnClose)},onClose(){d.restoreScroll(),document.removeEventListener("keydown",this.handlerEscape),document.removeEventListener("click",this.handlerBtnClose)}}).show(),v(n)}catch(e){console.log(e)}}document.querySelectorAll(".hero-button-moredetails").forEach(((t,o)=>{t.addEventListener("click",(()=>{n(e[o].id)}))}))}(e)}(n.slice(0,5),m)}catch(e){console.log("Error:",e)}}(),o("8FnLx");a=o("lWmWv");var b=o("1nG8V"),g=o("gjiCh");const w=document.querySelector(".card-list"),y=new(0,a.default),_=new(0,g.Loader);!async function(){try{_.onShow();const e=(await y.getTrend("week")).data.results.slice(0,3);w.innerHTML=await(0,b.createMarkupFilmsCards)(e)}catch(e){console.log("Error:",e)}_.onClose()}(),o("6Ju3h"),o("6HA5D"),o("iuRNH"),o("i04RF"),o("jnjzE");
//# sourceMappingURL=index.7d81a02d.js.map
